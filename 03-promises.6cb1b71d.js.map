{"mappings":"AAAeA,SAASC,cAAc,SAC/BC,iBAAiB,UAexB,SAAyBC,GACvBA,EAAIC,iBACJ,MAAMC,EAAQF,EAAIG,cAAcD,MAC1BE,EAAOJ,EAAIG,cAAcC,KACzBC,EAASL,EAAIG,cAAcE,OAEjC,IAAIC,EACAC,EAAcC,OAAOH,EAAOI,OAC5BC,EAAY,EACZC,EAASH,OAAON,EAAMO,OAE1BH,EAAUM,aAAY,MAxBxB,SAAuBC,EAAUX,GAC/B,OAAO,IAAIY,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBF,QAAiBX,OAE5Cc,EAAK,sBAAoBH,QAAiBX,MAAU,GAEvDA,EAAM,G,EAgBTkB,CAAcV,EAAWC,GACtBU,MAAKZ,IACJa,QAAQC,IACN,uBAAqBd,EAAII,eAAmBJ,EAAEP,UAAc,IAG/DsB,OAAMf,IACLa,QAAQC,IACN,sBAAoBd,EAAEI,eAAmBJ,EAAEP,UAAc,IAI/DQ,GAAa,EACbH,GAAe,EACfI,GAAUH,OAAOJ,EAAKK,OAEjBF,GACHkB,cAAcnB,EAAQ,GAEvBE,OAAOJ,EAAKK,O","sources":["src/js/03-promises.js"],"sourcesContent":["const formEL = document.querySelector('.form');\nformEL.addEventListener('submit', onPromiseSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`); \n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseSubmit(evt) {\n  evt.preventDefault();\n  const delay = evt.currentTarget.delay;\n  const step = evt.currentTarget.step;\n  const amount = evt.currentTarget.amount;\n\n  let timerId;\n  let amountInter = Number(amount.value);\n  let positionP = 1;\n  let delayP = Number(delay.value);\n\n  timerId = setInterval(() => {\n    createPromise(positionP, delayP)\n      .then(value => {\n        console.log(\n          `✅ Fulfilled promise ${value.position} in ${value.delay}ms`\n        );\n      })\n      .catch(value => {\n        console.log(\n          `❌ Rejected promise ${value.position} in ${value.delay}ms`\n        );\n      });\n\n    positionP += 1;\n    amountInter -= 1;\n    delayP += Number(step.value);\n\n    if (!amountInter) {\n      clearInterval(timerId);\n    }\n  }, Number(step.value));\n}\n\n\n"],"names":["document","querySelector","addEventListener","evt","preventDefault","delay","currentTarget","step","amount","timerId","amountInter","Number","value","positionP","delayP","setInterval","position","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$createPromise","then","console","log","catch","clearInterval"],"version":3,"file":"03-promises.6cb1b71d.js.map"}